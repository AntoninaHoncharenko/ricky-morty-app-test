{"version":3,"file":"static/js/121.46df08c8.chunk.js","mappings":"qOAEAA,EAAAA,EAAAA,SAAAA,QAAyB,kCAElB,IAAMC,EAAkB,mCAAG,6GAEPD,EAAAA,EAAAA,IAAU,cAFH,cAExBE,EAFwB,yBAGvBA,EAASC,KAAKC,SAHS,gCAK9BC,QAAQC,IAAI,KAAMC,SALY,yDAAH,qDASlBC,EAAkB,mCAAG,WAAMC,GAAN,gGAEPT,EAAAA,EAAAA,IAAA,qBAAwBS,IAFjB,cAExBP,EAFwB,yBAGvBA,EAASC,MAHc,gCAK9BE,QAAQC,IAAI,KAAMC,SALY,yDAAH,qD,sICXlBG,EAAY,WACvB,OACE,0BACE,gBAAKC,IAAKC,EAAOC,IAAI,eAAeC,MAAM,WAG/C,E,SCNYC,EAAc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACtC,OACE,0BACE,8BACE,SAAC,MAAD,CAAiBC,KAAK,QACtB,kBACEC,KAAK,OACLC,YAAY,oBACZC,MAAOJ,EACPD,SAAUA,QAKnB,E,iBCdYM,EAAiB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC/B,OACE,0BACE,wBACGA,EAAWC,KAAI,SAAAC,GACd,OACE,SAAC,KAAD,CAAMC,GAAE,WAAMD,EAAKhB,IAAnB,UACE,yBACE,4BACE,gBAAKE,IAAKc,EAAKb,MAAOC,IAAI,eAC1B,uBAAIY,EAAKE,QACT,uBAAIF,EAAKG,gBALeH,EAAKhB,GAUtC,OAIR,ECyBD,EAzCiB,WACf,OAAoCoB,EAAAA,EAAAA,UAAS,IAA7C,eAAON,EAAP,KAAmBO,EAAnB,KACA,GAAoDD,EAAAA,EAAAA,UAASN,GAA7D,eAAOQ,EAAP,KAA2BC,EAA3B,KACA,GAA0BH,EAAAA,EAAAA,UAASI,aAAaC,QAAQ,UAAY,IAApE,eAAOjB,EAAP,KAAckB,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAEuBnC,EAAAA,EAAAA,KAFvB,OAEUE,EAFV,OAGUkC,EAAalC,EAAKmC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEZ,KAAKc,cAAcD,EAAEb,KAAjC,IAC7BG,EAAcO,GAJlB,gDAMIhC,QAAQC,IAAR,MANJ,0DADc,uBAAC,WAAD,wBAWdoC,EACD,GAAE,KAEHN,EAAAA,EAAAA,YAAU,WACR,IAAMO,EAAWpB,EAAWqB,QAAO,SAAAnB,GAAI,OACrCA,EAAKE,KAAKkB,cAAcC,SAAS7B,EAAM4B,cADF,IAIvCb,EAAsBW,GACtBV,aAAac,QAAQ,QAAS9B,EAC/B,GAAE,CAACM,EAAYN,IAMhB,OACE,4BACE,SAACP,EAAD,KACA,SAACK,EAAD,CAAaC,SAPA,SAAAgC,GACfb,EAASa,EAAMC,OAAO5B,MACvB,EAKoCJ,MAAOA,KACxC,SAACK,EAAD,CAAgBC,WAAYQ,MAGjC,C","sources":["api.js","components/HeroImage/HeroImage.jsx","components/HerosFinder/HerosFinder.jsx","components/HeroList/HeroList.jsx","pages/MainPage/MainPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://rickandmortyapi.com/api';\n\nexport const fetchAllCharacters = async () => {\n  try {\n    const response = await axios.get('/character');\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchOneCharacters = async id => {\n  try {\n    const response = await axios.get(`/character/${id}`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n","import image from '../../images/heroimg.png';\n\nexport const HeroImage = () => {\n  return (\n    <div>\n      <img src={image} alt=\"RickAndMotry\" width=\"300px\" />\n    </div>\n  );\n};\n","import { AiOutlineSearch } from 'react-icons/ai';\n\nexport const HerosFinder = ({ onChange, query }) => {\n  return (\n    <div>\n      <label>\n        <AiOutlineSearch size=\"18\" />\n        <input\n          type=\"text\"\n          placeholder=\"Filter by name...\"\n          value={query}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\n","import { Link } from 'react-router-dom';\n\nexport const CharactersList = ({ characters }) => {\n  return (\n    <div>\n      <ul>\n        {characters.map(char => {\n          return (\n            <Link to={`/${char.id}`} key={char.id}>\n              <li>\n                <div>\n                  <img src={char.image} alt=\"heroimage\" />\n                  <p>{char.name}</p>\n                  <p>{char.species}</p>\n                </div>\n              </li>\n            </Link>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { HeroImage } from 'components/HeroImage/HeroImage';\nimport { HerosFinder } from 'components/HerosFinder/HerosFinder';\nimport { fetchAllCharacters } from 'api';\nimport { CharactersList } from 'components/HeroList/HeroList';\n\nconst MainPage = () => {\n  const [characters, setCharacters] = useState([]);\n  const [filteredCharacters, setFilteredCharacters] = useState(characters);\n  const [query, setQuery] = useState(localStorage.getItem('query') || '');\n\n  useEffect(() => {\n    async function getAllCharacters() {\n      try {\n        const data = await fetchAllCharacters();\n        const sortedData = data.sort((a, b) => a.name.localeCompare(b.name));\n        setCharacters(sortedData);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getAllCharacters();\n  }, []);\n\n  useEffect(() => {\n    const filtered = characters.filter(char =>\n      char.name.toLowerCase().includes(query.toLowerCase())\n    );\n\n    setFilteredCharacters(filtered);\n    localStorage.setItem('query', query);\n  }, [characters, query]);\n\n  const onChange = event => {\n    setQuery(event.target.value);\n  };\n\n  return (\n    <div>\n      <HeroImage />\n      <HerosFinder onChange={onChange} query={query} />\n      <CharactersList characters={filteredCharacters} />\n    </div>\n  );\n};\n\nexport default MainPage;\n"],"names":["axios","fetchAllCharacters","response","data","results","console","log","message","fetchOneCharacters","id","HeroImage","src","image","alt","width","HerosFinder","onChange","query","size","type","placeholder","value","CharactersList","characters","map","char","to","name","species","useState","setCharacters","filteredCharacters","setFilteredCharacters","localStorage","getItem","setQuery","useEffect","sortedData","sort","a","b","localeCompare","getAllCharacters","filtered","filter","toLowerCase","includes","setItem","event","target"],"sourceRoot":""}